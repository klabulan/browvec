{"version":3,"file":"Errors-CBeo1Lsn.mjs","sources":["../src/database/worker/utils/Errors.ts"],"sourcesContent":["/**\r\n * Custom Error Classes for LocalRetrieve\r\n *\r\n * Provides enhanced error classes with context for better debugging and error reporting.\r\n */\r\n\r\n/**\r\n * Validation error with structured context\r\n *\r\n * Thrown when document structure doesn't meet requirements before insertion.\r\n */\r\nexport class ValidationError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public context: {\r\n      collection: string;\r\n      document: any;\r\n      errors: string[];\r\n    }\r\n  ) {\r\n    super(message);\r\n    this.name = 'ValidationError';\r\n\r\n    // Maintain proper stack trace in V8 environments\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, ValidationError);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format error for logging\r\n   */\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      context: this.context,\r\n      stack: this.stack\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Document insertion error with diagnostic context\r\n *\r\n * Thrown when document insertion fails, including verification failures.\r\n */\r\nexport class DocumentInsertError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public context: {\r\n      collection: string;\r\n      documentId: string;\r\n      providedFields: string[];\r\n      originalError?: Error;\r\n      suggestion?: string;\r\n    }\r\n  ) {\r\n    super(message);\r\n    this.name = 'DocumentInsertError';\r\n\r\n    // Maintain proper stack trace\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, DocumentInsertError);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format error for logging\r\n   */\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      context: {\r\n        ...this.context,\r\n        originalError: this.context.originalError?.message\r\n      },\r\n      stack: this.stack\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Collection operation error\r\n *\r\n * Thrown when collection-level operations fail.\r\n */\r\nexport class CollectionError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public context: {\r\n      collection: string;\r\n      operation: string;\r\n      details?: any;\r\n    }\r\n  ) {\r\n    super(message);\r\n    this.name = 'CollectionError';\r\n\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, CollectionError);\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      context: this.context,\r\n      stack: this.stack\r\n    };\r\n  }\r\n}\r\n"],"names":["ValidationError","message","context","DocumentInsertError"],"mappings":"AAWO,MAAMA,UAAwB,MAAM;AAAA,EACzC,YACEC,GACOC,GAKP;AACA,UAAMD,CAAO,GANN,KAAA,UAAAC,GAOP,KAAK,OAAO,mBAGR,MAAM,qBACR,MAAM,kBAAkB,MAAMF,CAAe;AAAA,EAEjD;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,WAAO;AAAA,MACL,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,MACd,SAAS,KAAK;AAAA,MACd,OAAO,KAAK;AAAA,IAAA;AAAA,EAEhB;AACF;AAOO,MAAMG,UAA4B,MAAM;AAAA,EAC7C,YACEF,GACOC,GAOP;AACA,UAAMD,CAAO,GARN,KAAA,UAAAC,GASP,KAAK,OAAO,uBAGR,MAAM,qBACR,MAAM,kBAAkB,MAAMC,CAAmB;AAAA,EAErD;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AACP,WAAO;AAAA,MACL,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,MACd,SAAS;AAAA,QACP,GAAG,KAAK;AAAA,QACR,eAAe,KAAK,QAAQ,eAAe;AAAA,MAAA;AAAA,MAE7C,OAAO,KAAK;AAAA,IAAA;AAAA,EAEhB;AACF;"}